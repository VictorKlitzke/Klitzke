<?php

error_reporting(E_ALL);
ini_set('display_errors', 1);

$status_product = 'Em estoque';

$user_id = isset($_SESSION['id']) ? $_SESSION['id'] : null;

if (isset($_POST['action'])) {

    $multiply = Controllers::Select('config_multiply_product');

    $name = $_POST['name'];
    $quantity = $_POST['quantity'];
    $barcode = $_POST['barcode'];

    $cost_value = $_POST['cost_value'];
    $cost_value = str_replace(',', '.', preg_replace("/[^0-9,.]/", "", $cost_value));
    $cost_value = floatval($cost_value);

    $default = $cost_value * $multiply['multiply'];

    $model = $_POST['model'];
    $brand = $_POST['brand'];
    $reference = $_POST['reference'];
    $stock_quantity = $_POST['stock_quantity'];
    $register_date = $_POST['register_date'];
    $id_users = $user_id;
    $flow = $_FILES['flow'];
    $status_product = $_POST['status_product'];

    $name_img = Panel::UploadsImg($flow);

    if ($name == '' || $cost_value == '') {
        Panel::Alert('attention', 'Os campos não podem ficar vázios!');
    } else {
        $verification = Db::Connection()->prepare("SELECT * FROM `products` WHERE name = ? AND id_users = ?");
        $verification->execute([$_POST['name'], $user_id]);

        if ($verification->rowCount() > 0) {
            $updateQuery = Db::Connection()->prepare("UPDATE `products` SET stock_quantity = stock_quantity + ?, status_product = 'Em estoque' WHERE name = ? AND id_users = ?");
            $updateQuery->execute([$_POST['stock_quantity'], $_POST['status_product'], $_POST['name'], $user_id]);
            Panel::Alert('sucess', 'O cadastro do produto ' . $name . ' foi realizado com sucesso!');
        } else {
            $arr = [
                'name' => $name,
                'quantity' => $quantity,
                'barcode' => $barcode,
                'value_product' => $default,
                'cost_value' => $cost_value,
                'model' => $model,
                'brand' => $brand,
                'reference' => $reference,
                'stock_quantity' => $stock_quantity,
                'register_date' => $register_date,
                'id_users' => $id_users,
                'flow' => $name_img,
                'status_product' => 'Em estoque',
                'name_table' => 'products'
            ];
            Controllers::Insert($arr);
            Panel::Alert('sucess', 'O cadastro do produto ' . $name . ' foi realizado com sucesso!');
        }
    }
}

?>











/* ADICIONAR MAIS ITENS AO PEDIDO */

.card-itens-order {
    margin-top: 12px;
        background: #202020;
        border-radius: 4px;
        padding: 6px;
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        height: 124px;
        justify-content: flex-start;
        align-items: center;
        border: 1px solid #1b1b1b;
        overflow-x: auto;
}

.h2-order {
    font-size: 15px;
}

.info-itens-order {
    margin-bottom: 10px;
    padding: 12px;
    border-radius: 8px;
    background-color: #323232;
    cursor: pointer;
    display: flex;
    align-items: center;
}

.info-itens-order:hover {
    background: #1b1b1b;
}

.name-product-order,
.value-product-order {
    text-align: center;
    color: #ccc;
}

.order {
    border: 1px solid #ccc;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 100%;
    height: 200px;
    overflow-y: auto;
}

.order-header {
    background: #202020;
    color: #fff;
    padding: 8px;
    text-align: center;
}

.tr-order,
.thead-order {
    color: #1b1b1b;
    padding: 4px;
    text-align: left;
}

.items-list-order {
    list-style: none;
}

.item-order {
    display: flex;
    justify-content: space-between;
    border-bottom: 1px solid #1b1b1b;
    padding: 8px;
    text-align: left;
}

.order-info {
    flex: 1;
}

.button-order {
    font-size: 14px;
    color: #333;
    outline: none !important;
    width: 100%;
    background: transparent;
    border: 1px solid #ccc;
    padding: 10px;
    box-sizing: border-box;
    border-radius: 5px;
    cursor: pointer;
}

.button-order:hover {
    background: #3498db;
    color: white;
}

.order-header {
    /* background: #3498db; */
    background: #202020;
    color: #fff;
    padding: 8px;
    text-align: center;
}

.tr-order,
.thead-order {
    color: #1b1b1b;
    border: 1px solid #ddd;
    padding: 8px;
    text-align: left;
}

.items-list-order {
    list-style: none;
}

.item-order {
    border-bottom: 1px solid #1b1b1b;
    padding: 8px;
    text-align: left;
    overflow-y: scroll;
}

.item:last-child {
    border-bottom: none;
}

.button-order {
    font-size: 14px;
    color: #333;
    outline: none !important;
    width: 100%;
    background: transparent;
    border: 1px solid #ccc;
    padding: 10px;
    box-sizing: border-box;
    border-radius: 5px;
    cursor: pointer;
}

.button-order:hover {
    background: #3498db;
    color: white;
}

.card-itens-order {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}
.info-itens-order {
    width: 200px; /* Tamanho fixo para desktop */
}
@media (max-width: 768px) {
    .info-itens-order {
        width: 100%; /* Layout responsivo para dispositivos móveis */
    }
}




	let rowsCardProducts = document.getElementById('destination-table').value;
	const orderDetails = document.getElementById('orderDetails');
	const idTable = document.getElementById('id-table');
	const currentCommandId = document.getElementById('number-table').value.trim();

	SelectedFatPed.forEach(item => {
		const itemElement = document.createElement('div');
		itemElement.innerHTML = `
			<span>#: ${item.productID}</span>
			<span>Produto: ${item.productName}</span>
			<span>Quantidade: ${item.quantity}</span>
			<span>Total: R$ ${item.totalcard.toFixed(2)}</span>
			<hr>
		`;
		orderDetails.appendChild(itemElement);
	});

	// Preenche os detalhes do pedido
	idTable.textContent = `Número da Comanda: ${currentCommandId}`;
	document.getElementById('status-request').textContent = 'Status: Pendente';
	document.getElementById('date-request').textContent = `Data do pedido: ${new Date().toLocaleDateString()}`;

















	--- AGRUPAMENTO DE PEDIDO ---



	<h1 class="h2-global">Ajuntar Comandas</h1>
    <main>
        <section class="tables-dis">
            <h2 class="h2-gathers">Mesas Disponíveis</h2>
            <?php

            $tables_command = Controllers::SelectAllTableRequests('request');

            foreach ($tables_command as $key => $value) {

                ?>
                <div class="table-gathers"
                    onclick="addGathersArray(<?php echo $key ?>, '<?php echo $value['id'] ?>', '<?php echo $value['table_request'] ?>', '<?php echo $value['total_request'] ?>' )">
                    <p>Comanda:
                        <?php echo $value['table_request']; ?>
                    </p>
                    <p> Valor Total:
                        <?php echo $value['total_request']; ?>
                    </p>
                </div>

            <?php } ?>
        </section>

        <section>
            <h2 class="h2-gathers">Mesas Selecionadas</h2>
            <div class="table-gathers-selected">
                <table id="table-gathers-selected" style="color: #000;">
                    <thead>
                        <tr>
                            <td>#</td>
                            <td>Comanda</td>
                            <td>Valor total da comanda</td>
                        </tr>
                    </thead>
                    <tbody style="color: #000;">
                        <tr>

                        </tr>
                    </tbody>
                </table>
            </div>
        </section>
    </main>
    <div class="w100 info-total-gathers">
        <button class="button-gathers" id="button-gathers" onclick="GathersTables()">Ajuntar comandas</button>
        <h2 class="span-gathers">Total: <span id="totalizador">R$ 0,00</span></h2>
    </div>

    <script src="<?php echo INCLUDE_PATH_PANEL; ?>../js/add_request.js"></script>
